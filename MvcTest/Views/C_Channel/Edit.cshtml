@model MvcTest.Models.C_ChannelR

@{
    ViewBag.Title = "Edit";
}

@section HeadContent{
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="~/Content/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/Content/css/bootstrap-responsive.min.css" />
    @*<link rel="stylesheet" href="~/Content/css/colorpicker.css" />
        <link rel="stylesheet" href="~/Content/css/datepicker.css" />*@
    <link rel="stylesheet" href="~/Content/css/uniform.css" />
    <link rel="stylesheet" href="~/Content/css/select2.css" />
    <link rel="stylesheet" href="~/Content/css/matrix-style.css" />
    <link rel="stylesheet" href="~/Content/css/matrix-media.css" />
    @*<link rel="stylesheet" href="~/Content/css/bootstrap-wysihtml5.css" />*@
    @*<link href="~/fonts/css/font-awesome.css" rel="stylesheet" />
        <link href='http://fonts.googleapis.com/css?family=Open+Sans:400,700,800' rel='stylesheet' type='text/css'>*@
}

<div id="content">
    <div id="content-header">
        <div id="breadcrumb"> <a href="index.html" title="Go to Home" class="tip-bottom"><i class="icon-home"></i> Home</a> <a href="#" class="tip-bottom">C_Channel</a> <a href="#" class="current">修改</a> </div>
    </div>
    <div class="container-fluid">
        <div class="row-fluid">
            <div class="span12">
                <div class="widget-box">
                    <div class="widget-title">
                        <span class="icon"> <i class="icon-align-justify"></i> </span>
                        <h5>C_Channel</h5>
                    </div>
                    <div class="widget-content nopadding">
                        @using (Html.BeginForm("Edit", "C_Channel", new { id = Model.ChannelID }, FormMethod.Post, new { @class = "form-horizontal" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)


                            @Html.HiddenFor(model => model.ChannelID)

                            @Html.HiddenFor(model => model.CID)

                            <div class="control-group">
                                @Html.LabelFor(model => model.ChannelName, "频道名称", new { @class = "control-label" })
                                <div class="controls">
                                    @Html.TextBoxFor(model => model.ChannelName, new { @class = "span4", placeholder = "频道名称" })
                                    @Html.ValidationMessageFor(model => model.ChannelName)
                                </div>
                            </div>
                            <div class="control-group">
                                @Html.LabelFor(model => model.ChannelEName, "频道英文", new { @class = "control-label" })
                                <div class="controls">
                                    @Html.TextBoxFor(model => model.ChannelEName, new { @class = "span4", placeholder = "频道英文" })
                                    @Html.ValidationMessageFor(model => model.ChannelEName)
                                </div>
                            </div>
                            <div class="control-group">
                                @Html.LabelFor(model => model.PCID, "父频道", new { @class = "control-label" })
                                <div class="controls">
                                    @Html.DropDownListFor(model => model.PCID, (ViewBag.list as List<SelectListItem>), new { @class = "span4" })
                                </div>
                            </div>
                            <div class="control-group">
                                @Html.LabelFor(model => model.MetaKeyword, "Meta关键字", new { @class = "control-label" })
                                <div class="controls">
                                    @Html.TextBoxFor(model => model.MetaKeyword, new { @class = "span8", placeholder = "Meta关键字" })
                                    @Html.ValidationMessageFor(model => model.MetaKeyword)
                                </div>
                            </div>
                            <div class="control-group">
                                @Html.LabelFor(model => model.MetaDescription, "Meta描述", new { @class = "control-label" })
                                <div class="controls">
                                    @Html.TextBoxFor(model => model.MetaDescription, new { @class = "span8", placeholder = "Meta描述" })
                                    @Html.ValidationMessageFor(model => model.MetaDescription)
                                </div>
                            </div>
                            @*<div class="control-group">
                                    @Html.LabelFor(model => model.IsOutChannel, "是否外部栏目", new { @class = "control-label" })
                                    <div class="controls">
                                        @Html.TextBoxFor(model => model.IsOutChannel, new { @class = "span8", placeholder = "是否外部栏目" })
                                        @Html.ValidationMessageFor(model => model.IsOutChannel)
                                    </div>
                                </div>
                                <div class="control-group">
                                    @Html.LabelFor(model => model.OutChannelUrl, "外部栏目地址", new { @class = "control-label" })
                                    <div class="controls">
                                        @Html.TextBoxFor(model => model.OutChannelUrl, new { @class = "span8", placeholder = "外部栏目地址" })
                                        @Html.ValidationMessageFor(model => model.OutChannelUrl)
                                    </div>
                                </div>*@
                            <div class="control-group">
                                @Html.LabelFor(model => model.Sorc, "排序", new { @class = "control-label" })
                                <div class="controls">
                                    @Html.TextBoxFor(model => model.Sorc, new { @class = "span4", placeholder = "排序" })
                                    @Html.ValidationMessageFor(model => model.Sorc)
                                </div>
                            </div>
                            @*<div class="control-group">
                                    @Html.LabelFor(model => model.BindDomain, "绑定域名", new { @class = "control-label" })
                                    <div class="controls">
                                        @Html.TextBoxFor(model => model.BindDomain, new { @class = "span8", placeholder = "绑定域名" })
                                        @Html.ValidationMessageFor(model => model.BindDomain)
                                    </div>
                                </div>
                                <div class="control-group">
                                    @Html.LabelFor(model => model.Review, "审核机制", new { @class = "control-label" })
                                    <div class="controls">
                                        @Html.TextBoxFor(model => model.Review, new { @class = "span8", placeholder = "审核机制" })
                                        @Html.ValidationMessageFor(model => model.Review)
                                    </div>
                                </div>*@
                            <div class="control-group">
                                <label class="control-label">有权角色</label>
                                <div class="controls">
                                    @Html.ListBox("Rolelist", (ViewBag.RoleSS as IEnumerable<SelectListItem>), new { @multiple = "" })

                                </div>
                            </div>
                            <div class="control-group">
                                <label class="control-label">有权用户</label>
                                <div class="controls">
                                    @Html.DropDownList("Managerlist", (ViewBag.ManagerSS as List<SelectListItem>), new { @multiple = "" })

                                </div>
                            </div>
                            <div class="form-actions">
                                <button type="submit" class="btn btn-success" onclick="OnloadMessage1()">保存</button>
                                @Html.ActionLink("返回", "Index", "C_Channel", new { @class = "btn btn-success", @onclick = "OnloadMessage2()" })
                            </div>
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section FootContent{
    <script src="~/Scripts/js/jquery.min.js"></script>
    <script src="~/Scripts/js/matrix.js"></script>
    <script src="~/Scripts/js/jquery.ui.custom.js"></script>
    <script src="~/Scripts/js/bootstrap.min.js"></script>
    @*<script src="~/Scripts/js/bootstrap-datepicker.js"></script>*@
    <script src="~/Scripts/js/masked.js"></script>
    <script src="~/Scripts/js/jquery.uniform.js"></script>
    <script src="~/Scripts/js/select2.min.js"></script>

    <script src="~/Scripts/js/matrix.form_common.js"></script>
    @*<script src="~/Scripts/js/wysihtml5-0.3.0.js"></script>*@
    <script src="~/Scripts/js/jquery.peity.min.js"></script>
    @*<script src="~/Scripts/js/bootstrap-wysihtml5.js"></script>
        <script>
            $('.textarea_editor').wysihtml5();
        </script>*@
    @*<script src="~/Scripts/layer/layer.min.js"></script>
        <script>
            function OnloadMessage1() {
                layer.load("正在保存", 1);
            }
            function OnloadMessage2() {
                layer.load("正在跳转", 1);
            }
        </script>*@
}